services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./logs/:/logs/
        ports:
            - 8080:8080
        networks:
            - elk_network

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
        volumes:
            - ./conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
            - ./conf/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro
        healthcheck:
            test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
            interval: 3s
            timeout: 3s
            retries: 10
        ports:
            - 9200:9200
        networks:
            - elk_network

    logstash:
        image: docker.elastic.co/logstash/logstash:8.14.1
        volumes:
            - ./conf/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
        depends_on:
            elasticsearch:
                condition: service_healthy
        networks:
            - elk_network

    filebeat:
        image: docker.elastic.co/beats/filebeat:7.17.22
        entrypoint: "filebeat -e -strict.perms=false"
        depends_on:
            elasticsearch:
                condition: service_healthy
        volumes:
            - ./conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
            - ./logs/:/logs/
        networks:
            - elk_network

    kibana:
        image: docker.elastic.co/kibana/kibana:8.14.1
        depends_on:
            elasticsearch:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
            interval: 3s
            timeout: 3s
            retries: 50
        ports:
            - 5601:5601
        networks:
            - elk_network

networks:
    elk_network:
        driver: bridge
